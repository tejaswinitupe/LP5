import numpy as np
from tensorflow.keras.datasets import imdb
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.preprocessing.sequence import pad_sequences
import matplotlib.pyplot as plt

# Load the IMDB dataset
(x_train, y_train), (x_test, y_test) = imdb.load_data(num_words=5000)

# Preprocess the data
max_review_length = 500
x_train = pad_sequences(x_train, maxlen=max_review_length)
x_test = pad_sequences(x_test, maxlen=max_review_length)

# Build the DNN model
model = Sequential()
model.add(Dense(250, input_dim=max_review_length, activation='relu'))
model.add(Dense(150, activation='relu'))
model.add(Dense(75, activation='relu'))
model.add(Dense(1, activation='sigmoid'))
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])


# Train the model
model.fit(x_train, y_train, validation_data=(x_test, y_test), epochs=3, batch_size=64)

# Generate predictions for the test data
y_pred = model.predict(x_test)

# Flatten the predictions array
y_pred = np.squeeze(y_pred)


# Create a histogram
plt.hist(y_pred, bins=30, range=(0, 1), alpha=0.75)
plt.xlabel('Predicted Probability')
plt.ylabel('Count')
plt.title('Histogram of Predicted Probabilities')
plt.show()
