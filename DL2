import numpy as np
import matplotlib.pyplot as plt 

import pandas as pd  
import seaborn as sns 

%matplotlib inline

df=pd.read_csv('./BostonHousing.csv')
df
df.shape
df.describe()
df.info
df.isnull().sum()
for column in df.columns[:-1]:
    plt.figure(figsize=(20, 5))
    if df[column].dtype in [np.int64, np.float64]: # only plot numeric columns
        plt.scatter(df[column],df['medv'])
        plt.xlabel(column)
        plt.ylabel("medv")
        plt.show()
        
!pip3 install -U scikit-learn
from sklearn.model_selection import train_test_split

X = df.loc[:, df.columns != 'medv']
y = df.loc[:, df.columns == 'medv']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=123)

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train  = sc.fit_transform(X_train)
X_test = sc.transform(X_test)
!pip3 install -U tensorflow
from keras.models import Sequential
from keras.layers import Dense

model = Sequential()

model.add(Dense(128, input_shape=(13, ), activation='relu', name='dense_1'))
model.add(Dense(64, activation='relu', name='dense_2'))
model.add(Dense(32, activation='relu', name='dense_3'))
model.add(Dense(1, activation='linear', name='dense_output'))

model.compile(optimizer='adam', loss='mse', metrics=['mae'])
model.summary()

