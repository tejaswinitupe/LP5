import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import tensorflow as tf
from tensorflow.keras.layers import Dense,Dropout,MaxPooling2D,Conv2D,Flatten
from tensorflow.keras.datasets import fashion_mnist
from tensorflow.keras.models import Sequential

(x_train, y_train) ,(x_test,y_test) = fashion_mnist.load_data()

class_lables =["T-shirt/Top","Trouser","pullover","Dress","coat","Sneaker","Shirt","Sandle","Bag","Ankle boot",]
class_lables

plt.imshow(x_train[0],cmap="Blues")

x_train=x_train/255.0
x_test=x_test/255.0
y_train=tf.keras.utils.to_categorical(y_train,num_classes=10)
y_test=tf.keras.utils.to_categorical(y_test,num_classes=10)

model=Sequential()
model.add(Conv2D(32,(3,3), activation ='relu', input_shape=(28, 28, 1)))
model.add(MaxPooling2D((2,2)))
model.add(Conv2D(64,(3,3), activation='relu'))
model.add(MaxPooling2D((2,2)))
model.add(Flatten())
model.add(Dense(10, activation='relu'))
model.add(Dropout(0.5))
model.add(Dense(10, activation ='softmax'))
model.add(Dropout(0.5))


model.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy'])

model.fit(x_train,y_train ,epochs=10,batch_size=128 , validation_data=(x_test, y_test))

y_pred=model.predict(x_test)

loss, accuracy =model.evaluate(x_test,y_test)
print(f"Test loss : {loss:.4f}")
print(f"Test accuracy : {accuracy:.4f}")


num_sam=5
print(f"out")
for i in range(num_sam):
  image=x_test[i]
  predicted_probs=model.predict(np.expand_dims(image, axis=0))
  predicted_lable=np.argmax(predicted_probs)
  class_name=class_lables[predicted_lable]
  print(f"image: {i+1} : predicted : {class_name}")
  
  
  
